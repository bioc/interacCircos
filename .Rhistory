remove.packages("rNGCircos")
devtools::install_github("mrcuizhe/rNGCircos")
rNGCircos::rNGCircos()
devtools::check(manual = TRUE)
devtools::build()
devtools::install()
rNGCircos()
rNGCircos::rNGCircos()
remove.packages("rNGCircos")
library(interacCircos``)
library(interacCircos)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample),zoom = FALSE)
devtools::install()
library(interacCircos``)
library(interacCircos)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample),zoom = FALSE)
devtools::install()
library(interacCircos)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample),zoom = FALSE)
devtools::install()
library(interacCircos)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample),zoom = FALSE)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample),zoom = FALSE)``
devtools::install()
library(interacCircos)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample),zoom = FALSE)
devtools::install()
library(interacCircos)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample),zoom = FALSE)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample,radius = 190),zoom = FALSE)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample,radius = 195),zoom = FALSE)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample,radius = 198),zoom = FALSE)
devtools::install()
library(interacCircos)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample),zoom = FALSE)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample,radius = 150),zoom = FALSE)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample,radius = 150,fillColor = "#000",fillOpacity = "32131"),zoom = FALSE)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample,radius = 150,fillColor = "#000",fillOpacity = "0.2"),zoom = FALSE)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample,radius = 150,fillColor = "#000",fillOpacity = 0.2),zoom = FALSE)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample,radius = 150,fillColor = "#000",fillOpacity = 0.1),zoom = FALSE)
devtools::install()
library(interacCircos)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample,radius = 150,fillColor = "#000",fillOpacity = 0.1),zoom = FALSE)``
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample,radius = 150,fillColor = "#000",fillOpacity = 0.1),zoom = FALSE)``
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample,radius = 150,fillColor = "#000",fillOpacity = 0.1),zoom = FALSE)
Circos(moduleList = CircosChord.p("dsad",data = chord.pExample,radius = 150,fillColor = "#000",fillOpacity = 0.1),zoom = FALSE)
roxygen2::roxygenize(package.dir = ".")
devtools::check(manual = TRUE)
devtools::build(manual = TRUE)
devtools::install(manual = TRUE)
setwd("~/Documents/GitHub/rNGCircos")
roxygen2::roxygenize(package.dir = ".")
devtools::check(manual = TRUE)
devtools::build(manual = TRUE)
devtools::install(manual = TRUE)
roxygen2::roxygenize(package.dir = ".")
devtools::check(manual = TRUE)
devtools::build(manual = TRUE)
devtools::install(manual = TRUE)
roxygen2::roxygenize(package.dir = ".")
devtools::check(manual = TRUE)
devtools::build(manual = TRUE)
devtools::install(manual = TRUE)
roxygen2::roxygenize(package.dir = ".")
devtools::check(manual = TRUE)
devtools::build(manual = TRUE)
devtools::install(manual = TRUE)
